{"version":3,"sources":["components/Piece.js","components/Square.js","functionalJS.js","connectFour.js","components/Board.js","index.js"],"names":["piece","props","className","isYellow","square","value","Piece","onClick","partial","fn","partialArgs","fullArguments","ntimes","fill","n","take","car","cdr","hasSubSeq","range","start","stop","seq","length","every","slice","columns","matrix","map","_","i","row","shift2D","toLeft","len","dir","fJS","partialSubSeq","Board","renderSquare","x","y","Square","state","squares","handleClick","createArray","redIsNext","Array","this","lastPieceInCollumn","findIndex","setState","status","board","color","lastMover","some","React","Component","Game","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e04080b.chunk.js","sourcesContent":["import React from 'react'\n\nconst piece = props => {\n    let className = 'circle red'\n    if (props.isYellow) {\n        className += ' yellow';\n    }\n    return (\n        <div className={className}>&nbsp;</div>\n    )\n}\n\nexport default piece","import React from 'react'\nimport Piece from './Piece'\n\nconst square = (props) => {\n    let piece = null;\n    if (props.value === 'X' || props.value === 'O') {\n        piece = <Piece isYellow={props.value === 'O'}></Piece>\n    }\n    return (\n        <button className='square' onClick={props.onClick}>\n            {piece}\n        </button>\n    );\n}\n\nexport default square","const partial = function (fn, ...partialArgs) {\n    // eslint-disable-next-line\n    let args = partialArgs;\n    return function (...fullArguments) {\n        return fn(...[...partialArgs, ...fullArguments]);\n    }\n}\n\nconst ntimes = (fill, n) => (n === 0) ? [] : [fill, ...ntimes(fill, n - 1)]\n\nconst car = ([car,]) => car\n\nconst cdr = ([, ...cdr]) => cdr\n\nconst take = (n, [car, ...cdr]) => (n === 0) ? [] : [car, ...take(n - 1, cdr)]\n\nconst range = (start, stop) => (\n    (start === stop - 1) ?\n        [stop - 1] :\n        [start, ...range(start + 1, stop)]\n)\n\nconst range2 = partial(range, 0)\n\nconst hasSubSeq = (n, fill, seq) => (\n    (seq.length < n) ? false :\n        (take(n, seq).every((value) => value === fill)) ?\n            true :\n            hasSubSeq(n, fill, [...seq].slice(1))\n)\n\nexport {\n    partial\n    , ntimes\n    , car\n    , cdr\n    , take\n    , range\n    , range2\n    , hasSubSeq\n}\n","import * as fJS from './functionalJS.js'\n\nexport const printBoard = board => {\n\tconst t1 = board.map(row => {\n\t\treturn row.reduce((x, acc) => `${x},${acc}`)\n\t})\n\tconsole.log(t1)\n}\n\nexport const columns = (matrix) => (\n\tmatrix[0].map((_, i) => (\n\t\tmatrix.map((row) => row[i])\n\t))\n)\n\nexport const shift2D = (matrix, fill, toLeft) => {\n\tconst len = matrix.length\n\treturn matrix.map((row, i) => {\n\t\tconst dir = (toLeft) ? [len - i - 1, i] : [i, len - i - 1]\n\t\treturn [...(fJS.ntimes(fill, fJS.car(dir))), ...row, ...fJS.ntimes(fill, fJS.cdr(dir)[0])]\n\t})\n}\n\nconst partialSubSeq = (fill) => fJS.partial(fJS.hasSubSeq, 4, fill)\n\nexport const checkIfWinningState = (board, color) => (\n\tboard.some(partialSubSeq(color))\n\t|| columns(board).some(partialSubSeq(color))\n\t|| columns(shift2D(board, 0)).some(partialSubSeq(color))\n\t|| columns(shift2D(board, 0, true)).some(partialSubSeq(color))\n)\n","import React from 'react'\nimport Square from './Square'\nimport { checkIfWinningState, columns } from '../connectFour.js'\n\nexport default class Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: this.createArray(),\n            redIsNext: true\n        }\n    }\n\n    createArray() {\n        return Array(6).fill(null).map(() => Array(7).fill(null))\n    }\n\n    handleClick(x, y) {\n        const squares = this.state.squares.slice();\n\n        const clickedCollumn = columns(this.state.squares)[x]\n        const lastPieceInCollumn = clickedCollumn.findIndex((x) => x !== null)\n        const collPosition = lastPieceInCollumn === -1 ? 5 : lastPieceInCollumn - 1\n        squares[collPosition][x] = this.state.redIsNext ? 'X' : 'O';\n\n        this.setState({\n            squares: squares,\n            redIsNext: !this.state.redIsNext\n        });\n    }\n\n    renderSquare = (x, y) => (\n        <Square\n            value={this.state.squares[y][x]}\n            onClick={() => this.handleClick(x, y)}\n        />\n    )\n\n    render() {\n        let status\n        let lastMover = this.state.redIsNext ? 'O' : 'X'\n        if (checkIfWinningState(this.state.squares, lastMover)) {\n            status = 'Winner: ' + (this.state.redIsNext ? 'yellow' : 'red');\n        } else {\n            status = 'Next player: ' + (this.state.redIsNext ? 'red' : 'yellow');\n        }\n\n        return (\n            <div>\n                <div className=\"status\">{status}</div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0, 0)}\n                    {this.renderSquare(1, 0)}\n                    {this.renderSquare(2, 0)}\n                    {this.renderSquare(3, 0)}\n                    {this.renderSquare(4, 0)}\n                    {this.renderSquare(5, 0)}\n                    {this.renderSquare(6, 0)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0, 1)}\n                    {this.renderSquare(1, 1)}\n                    {this.renderSquare(2, 1)}\n                    {this.renderSquare(3, 1)}\n                    {this.renderSquare(4, 1)}\n                    {this.renderSquare(5, 1)}\n                    {this.renderSquare(6, 0)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0, 2)}\n                    {this.renderSquare(1, 2)}\n                    {this.renderSquare(2, 2)}\n                    {this.renderSquare(3, 2)}\n                    {this.renderSquare(4, 2)}\n                    {this.renderSquare(5, 2)}\n                    {this.renderSquare(6, 2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0, 3)}\n                    {this.renderSquare(1, 3)}\n                    {this.renderSquare(2, 3)}\n                    {this.renderSquare(3, 3)}\n                    {this.renderSquare(4, 3)}\n                    {this.renderSquare(5, 3)}\n                    {this.renderSquare(6, 3)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0, 4)}\n                    {this.renderSquare(1, 4)}\n                    {this.renderSquare(2, 4)}\n                    {this.renderSquare(3, 4)}\n                    {this.renderSquare(4, 4)}\n                    {this.renderSquare(5, 4)}\n                    {this.renderSquare(6, 4)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0, 5)}\n                    {this.renderSquare(1, 5)}\n                    {this.renderSquare(2, 5)}\n                    {this.renderSquare(3, 5)}\n                    {this.renderSquare(4, 5)}\n                    {this.renderSquare(5, 5)}\n                    {this.renderSquare(6, 5)}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Board from './components/Board.js'\n\nconst game = props => (\n    <div className=\"game\">\n        <div className=\"game-board\">\n            <Board />\n        </div>\n        <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n        </div>\n    </div>\n)\nconst Game = game\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}